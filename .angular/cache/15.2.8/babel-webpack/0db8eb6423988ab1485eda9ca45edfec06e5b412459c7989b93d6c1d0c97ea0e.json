{"ast":null,"code":"import { Validators, FormGroup } from '@angular/forms';\n// import { CommonService } from 'src/app/services/common.service';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Please provide a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Please provide a password of atleast 8 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, router,\n  // private authService: CommonService,\n  http) {\n    this.fb = fb;\n    this.router = router;\n    this.http = http;\n    this.loginV = FormGroup;\n    this.LoginStatus$ = new BehaviorSubject(false);\n    this.email = \"\";\n    this.password = \"\";\n    this.value = \"\";\n    this.isLogin = true;\n    this.errMessage = \"\";\n    // loginForm: FormGroup;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  login() {\n    this.http.post(\"http://localhost:8080/api/login\", this.loginForm.value).subscribe(resultData => {\n      let result = resultData.email.indexOf(\"@\");\n      // localStorage.setItem(\"username\",JSON.stringify(resultData));\n      localStorage.setItem(\"loggedUser\", JSON.stringify(resultData));\n      //localStorage.setItem(\"loggedUserName\",JSON.stringify(resultData.));\n      localStorage.setItem(\"username\", resultData.email.substr(0, result));\n      if (this.loginForm.valid) {\n        this.authService.login(this.loginForm.value);\n      }\n      this.formSubmitAttempt = true;\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 26,\n  vars: 4,\n  consts: [[\"id\", \"\", 1, \"header-cl\"], [\"src\", \"https://freepngimg.com/save/130291-letter-v-png-download-free/512x512\", \"alt\", \"\", 1, \"h-8\", \"w-8\", \"roundede-full\"], [1, \"bg-slate-600\", \"min-h-screen\", \"flex\", \"flex-col\"], [1, \"container\", \"max-w-sm\", \"mx-auto\", \"flex-1\", \"flex\", \"flex-col\", \"items-center\", \"justify-center\", \"px-2\"], [1, \"bg-white\", \"px-6\", \"py-8\", \"rounded\", \"shadow-md\", \"text-black\", \"w-full\"], [1, \"mb-8\", \"text-3xl\", \"text-center\"], [1, \"form\", 3, \"formGroup\"], [\"id\", \"b-name\", 4, \"ngIf\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"block\", \"border\", \"border-grey-light\", \"w-full\", \"p-3\", \"rounded\", \"mb-4\"], [1, \"value\"], [\"id\", \"c-name\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"block\", \"border\", \"border-grey-light\", \"w-full\", \"p-3\", \"rounded\", \"mb-4\"], [\"id\", \"btn-style\", \"type\", \"submit\", 1, \"w-full\", \"text-center\", \"py-3\", \"rounded\", \"bg-green\", \"bg-slate-600\", \"text-white\", \"block\", \"border\", \"border-grey-light\", \"p-3\", \"mb-4\", \"hover:bg-green-dark\", \"focus:outline-none\", \"my-1\", 3, \"click\"], [1, \"text-center\", \"text-sm\", \"text-grey-dark\", \"mt-4\"], [\"routerLink\", \"/forgot-password\", 1, \"no-underline\", \"border-b\", \"border-grey-dark\", \"text-grey-dark\", \"text-blue-500\"], [1, \"text-grey-dark\", \"mt-6\", \"text-white\"], [\"routerLink\", \"/register\", 1, \"no-underline\", \"border-b\", \"border-blue\", \"text-red-600\"], [\"id\", \"b-name\"], [\"id\", \"c-name\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵtext(2, \"UKANI \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"h1\", 5);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 6);\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"h1\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵelementStart(16, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_16_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(17, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13);\n      i0.ɵɵtext(19, \" Forgot \");\n      i0.ɵɵelementStart(20, \"a\", 14);\n      i0.ɵɵtext(21, \" Password? \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(22, \"div\", 15);\n      i0.ɵɵtext(23, \" Do not have an account? \");\n      i0.ɵɵelementStart(24, \"a\", 16);\n      i0.ɵɵtext(25, \" Register \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").invalid && (ctx.loginForm.get(\"email\").dirty || ctx.loginForm.get(\"email\").touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").invalid && (ctx.loginForm.get(\"password\").dirty || ctx.loginForm.get(\"password\").touched));\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,UAAU,EAAEC,SAAS,QAAqB,gBAAgB;AAGnE;AACA,SAASC,eAAe,QAAQ,MAAM;;;;;;;;ICIxBC,+BAA4H;IACxHA,uDACF;IAAAA,iBAAM;;;;;IAURA,+BAAqI;IACjIA,oEACF;IAAAA,iBAAM;;;ADVtB,OAAM,MAAOC,cAAc;EAiBzBC,YACUC,EAAe,EACfC,MAAc;EACtB;EACQC,IAAiB;IAHjB,OAAE,GAAFF,EAAE;IACF,WAAM,GAANC,MAAM;IAEN,SAAI,GAAJC,IAAI;IAnBd,WAAM,GAAOP,SAAS;IAGtB,iBAAY,GAAG,IAAIC,eAAe,CAAU,KAAK,CAAC;IAElD,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;IACrB,UAAK,GAAW,EAAE;IAElB,YAAO,GAAY,IAAI;IACvB,eAAU,GAAW,EAAE;IAEvB;IACA,cAAS,GAAG,KAAK;EAOb;EAEJO,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACY,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAGAC,KAAK;IAGH,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,iCAAiC,EAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CAACC,SAAS,CAAEC,UAAe,IAAG;MAElG,IAAIC,MAAM,GAAGD,UAAU,CAACR,KAAK,CAACU,OAAO,CAAC,GAAG,CAAC;MAE1C;MACAC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU,CAAC,CAAC;MAC/D;MAGCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAACJ,UAAU,CAACR,KAAK,CAACe,MAAM,CAAC,CAAC,EAAEN,MAAM,CAAC,CAAC;MAEnE,IAAI,IAAI,CAACX,SAAS,CAACkB,KAAK,EAAE;QACxB,IAAI,CAACC,WAAW,CAACb,KAAK,CAAC,IAAI,CAACN,SAAS,CAACQ,KAAK,CAAC;;MAE9C,IAAI,CAACY,iBAAiB,GAAG,IAAI;IAE/B,CAAC,CAAC;EACJ;;AApDW1B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BhC,8BAA6B;MAC3BA,yBAAsH;MAAAA,sBACtH;MAAAA,iBAAM;MACRA,8BAAqD;MAGLA,qBAAK;MAAAA,iBAAK;MAEhDA,+BAA2C;MACvCA,+DAEQ;MACZA,4BAI0B;MACtBA,+BAAmB;MACXA,aAAS;MAAAA,iBAAK;MAGtBA,kEAEQ;MACZA,6BAI6B;MAE7BA,mCAKC;MAJGA;QAAA,OAASiC,WAAO;MAAA,EAAC;MAIpBjC,sBAAK;MAAAA,iBAAS;MAEfA,gCAAqD;MACjDA,yBACA;MAAAA,8BAA6G;MACzGA,4BACJ;MAAAA,iBAAI;MAMZA,gCAA8C;MAC1CA,0CACF;MAAAA,8BAAiF;MAC3EA,2BACJ;MAAAA,iBAAI;;;MA3CeA,eAAuB;MAAvBA,yCAAuB;MACpBA,eAAwG;MAAxGA,qIAAwG;MASlHA,eAAS;MAATA,+BAAS;MAGCA,eAAiH;MAAjHA,8IAAiH","names":["Validators","FormGroup","BehaviorSubject","i0","LoginComponent","constructor","fb","router","http","ngOnInit","loginForm","group","email","required","password","minLength","login","post","value","subscribe","resultData","result","indexOf","localStorage","setItem","JSON","stringify","substr","valid","authService","formSubmitAttempt","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/da_m1_60/Desktop/MashonisaLoanManagementSystem/src/app/Accounts/login/login.component.ts","/Users/da_m1_60/Desktop/MashonisaLoanManagementSystem/src/app/Accounts/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n// import { CommonService } from 'src/app/services/common.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginV:any = FormGroup;\n  private formSubmitAttempt!: boolean;\n\n  LoginStatus$ = new BehaviorSubject<boolean>(false);\n\n  email: string = \"\";\n  password: string = \"\";\n  value: string = \"\";\n\n  isLogin: boolean = true;\n  errMessage: string = \"\";\n\n  // loginForm: FormGroup;\n  submitted = false;\n  \n  constructor(\n    private fb: FormBuilder,  \n    private router: Router,\n    // private authService: CommonService,\n    private http : HttpClient\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({   \n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n \n\n  login() {\n    \n  \n    this.http.post(\"http://localhost:8080/api/login\",this.loginForm.value).subscribe((resultData: any)=>\n    {    \n      let result = resultData.email.indexOf(\"@\");\n\n      // localStorage.setItem(\"username\",JSON.stringify(resultData));\n      localStorage.setItem(\"loggedUser\", JSON.stringify(resultData));\n     //localStorage.setItem(\"loggedUserName\",JSON.stringify(resultData.));\n\n\n      localStorage.setItem(\"username\",resultData.email.substr(0, result));\n\n      if (this.loginForm.valid) {\n        this.authService.login(this.loginForm.value);\n      }\n      this.formSubmitAttempt = true;\n\n    });\n  }\n}\n","<div class=\"header-cl\" id=\"\">\n  <img class=\"h-8 w-8 roundede-full\" src=\"https://freepngimg.com/save/130291-letter-v-png-download-free/512x512\" alt=\"\">UKANI\n  </div>\n<div class=\"bg-slate-600 min-h-screen flex flex-col\">\n  <div class=\"container max-w-sm mx-auto flex-1 flex flex-col items-center justify-center px-2\">\n      <div class=\"bg-white px-6 py-8 rounded shadow-md text-black w-full\">\n          <h1 class=\"mb-8 text-3xl text-center\">Login</h1>\n\n          <form class=\"form\" [formGroup]=\"loginForm\">\n              <div id=\"b-name\" *ngIf=\"loginForm.get('email').invalid && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                  Please provide a valid email address.\n                </div>\n          <input \n              type=\"email\"\n              formControlName=\"email\"\n              class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n              placeholder=\"Email\" />\n              <div class=\"value\">\n                  <h1>{{value}}</h1>\n              </div>\n                        \n              <div id=\"c-name\" *ngIf=\"loginForm.get('password').invalid && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n                  Please provide a password of atleast 8 characters.\n                </div> \n          <input \n              type=\"password\"\n              formControlName=\"password\"\n              class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n              placeholder=\"Password\" />\n        \n          <button\n              (click)=\"login()\"\n              id=\"btn-style\"\n              type=\"submit\"\n              class=\"w-full text-center py-3 rounded bg-green bg-slate-600  text-white block border border-grey-light p-3 mb-4 hover:bg-green-dark focus:outline-none my-1\"\n          >Login</button>\n\n          <div class=\"text-center text-sm text-grey-dark mt-4\">\n              Forgot \n              <a class=\"no-underline border-b border-grey-dark text-grey-dark text-blue-500\" routerLink=\"/forgot-password\">\n                  Password?\n              </a>\n          </div>\n          </form>\n\n      </div>\n\n      <div class=\"text-grey-dark mt-6 text-white\"  >\n          Do not have an account? \n        <a class=\"no-underline border-b border-blue text-red-600\" routerLink=\"/register\"> \n              Register\n          </a>\n      </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}