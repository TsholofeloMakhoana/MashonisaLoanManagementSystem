{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators, FormGroup } from '@angular/forms';\n// import { CommonService } from 'src/app/services/common.service';\nimport { BehaviorSubject } from 'rxjs';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, router, authService, http) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.http = http;\n    this.loginV = FormGroup;\n    this.LoginStatus$ = new BehaviorSubject(false);\n    this.email = \"\";\n    this.password = \"\";\n    this.value = \"\";\n    this.isLogin = true;\n    this.errMessage = \"\";\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  login() {\n    this.http.post(\"http://localhost:8080/api/login\", this.loginForm.value).subscribe(resultData => {\n      let result = resultData.email.indexOf(\"@\");\n      // localStorage.setItem(\"username\",JSON.stringify(resultData));\n      localStorage.setItem(\"loggedUser\", JSON.stringify(resultData));\n      //localStorage.setItem(\"loggedUserName\",JSON.stringify(resultData.));\n      localStorage.setItem(\"username\", resultData.email.substr(0, result));\n      if (this.loginForm.valid) {\n        this.authService.login(this.loginForm.value);\n      }\n      this.formSubmitAttempt = true;\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,UAAU,EAAEC,SAAS,QAAqB,gBAAgB;AAGnE;AACA,SAASC,eAAe,QAAQ,MAAM;AAQ/B,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAiBzBC,YACUC,EAAe,EACfC,MAAc,EACdC,WAA0B,EAC1BC,IAAiB;IAHjB,OAAE,GAAFH,EAAE;IACF,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IAnBd,WAAM,GAAOP,SAAS;IAGtB,iBAAY,GAAG,IAAIC,eAAe,CAAU,KAAK,CAAC;IAElD,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;IACrB,UAAK,GAAW,EAAE;IAElB,YAAO,GAAY,IAAI;IACvB,eAAU,GAAW,EAAE;IAGvB,cAAS,GAAG,KAAK;EAOb;EAEJO,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACY,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAGAC,KAAK;IAGH,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,iCAAiC,EAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CAACC,SAAS,CAAEC,UAAe,IAAG;MAElG,IAAIC,MAAM,GAAGD,UAAU,CAACR,KAAK,CAACU,OAAO,CAAC,GAAG,CAAC;MAE1C;MACAC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU,CAAC,CAAC;MAC/D;MAGCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAACJ,UAAU,CAACR,KAAK,CAACe,MAAM,CAAC,CAAC,EAAEN,MAAM,CAAC,CAAC;MAEnE,IAAI,IAAI,CAACX,SAAS,CAACkB,KAAK,EAAE;QACxB,IAAI,CAACrB,WAAW,CAACS,KAAK,CAAC,IAAI,CAACN,SAAS,CAACQ,KAAK,CAAC;;MAE9C,IAAI,CAACW,iBAAiB,GAAG,IAAI;IAE/B,CAAC,CAAC;EACJ;CACD;AArDY1B,cAAc,eAN1BJ,SAAS,CAAC;EACT+B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GAEW7B,cAAc,CAqD1B;SArDYA,cAAc","names":["Component","Validators","FormGroup","BehaviorSubject","LoginComponent","constructor","fb","router","authService","http","ngOnInit","loginForm","group","email","required","password","minLength","login","post","value","subscribe","resultData","result","indexOf","localStorage","setItem","JSON","stringify","substr","valid","formSubmitAttempt","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/da_m1_60/Desktop/MashonisaLoanManagementSystem/src/app/Accounts/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n// import { CommonService } from 'src/app/services/common.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginV:any = FormGroup;\n  private formSubmitAttempt!: boolean;\n\n  LoginStatus$ = new BehaviorSubject<boolean>(false);\n\n  email: string = \"\";\n  password: string = \"\";\n  value: string = \"\";\n\n  isLogin: boolean = true;\n  errMessage: string = \"\";\n\n  loginForm: FormGroup;\n  submitted = false;\n  \n  constructor(\n    private fb: FormBuilder,  \n    private router: Router,\n    private authService: CommonService,\n    private http : HttpClient\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({   \n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n \n\n  login() {\n    \n  \n    this.http.post(\"http://localhost:8080/api/login\",this.loginForm.value).subscribe((resultData: any)=>\n    {    \n      let result = resultData.email.indexOf(\"@\");\n\n      // localStorage.setItem(\"username\",JSON.stringify(resultData));\n      localStorage.setItem(\"loggedUser\", JSON.stringify(resultData));\n     //localStorage.setItem(\"loggedUserName\",JSON.stringify(resultData.));\n\n\n      localStorage.setItem(\"username\",resultData.email.substr(0, result));\n\n      if (this.loginForm.valid) {\n        this.authService.login(this.loginForm.value);\n      }\n      this.formSubmitAttempt = true;\n\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}